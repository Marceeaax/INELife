{Application 'NOTAS_FALTANTES_DOC' logic file generated by CSPro}
PROC GLOBAL
numeric i;
PROC VAL_IMESPPBI_FF

PROC XVAL06

		  
IF NOT (D113) IN 1,6 THEN
 //CONTROLA();
 //errmsg("001- DOC-ERR013, D113 Falta documentos <> 1,6 [%d]", D113); 
 //errmsg(" ");
ENDIF;	

IF (D113) IN 1 THEN
		string auxvarD113;
		
		auxvarD113=strip(D113B);
		if strip(auxvarD113)<> "" then
			//errmsg("002- D113B:%s",D113B);
			
			if ischecked("1", strip(auxvarD113)) > 0 THEN D1011=1; else D1011=notappl; endif;
			if ischecked("2", strip(auxvarD113)) > 0 THEN D1021=2; else D1021=notappl; endif;
			if ischecked("3", strip(auxvarD113)) > 0 THEN D1031=3; else D1031=notappl; endif;
			if ischecked("4", strip(auxvarD113)) > 0 THEN D1041=4; else D1041=notappl; endif;
			if ischecked("5", strip(auxvarD113)) > 0 THEN D1051=5; else D1051=notappl; endif;
			if ischecked("6", strip(auxvarD113)) > 0 THEN D1061=6; else D1061=notappl; endif;
			if ischecked("7", strip(auxvarD113)) > 0 THEN D1071=7; else D1071=notappl; endif;
			if ischecked("8", strip(auxvarD113)) > 0 THEN D1081=8; else D1081=notappl; endif;
		endif;

        //------------------------------------------------------------------------------------
		IF D1011 IN 1 THEN write("%s;003- Falta %s",strip(CI_CLAVE),getlabel(D1011)); endif;
		IF D1021 IN 2 THEN write("%s;004- Falta %s",strip(CI_CLAVE),getlabel(D1021)); endif;
		IF D1031 IN 3 THEN write("%s;005- Falta %s",strip(CI_CLAVE),getlabel(D1031)); endif;
		IF D1041 IN 4 THEN write("%s;006- Falta %s",strip(CI_CLAVE),getlabel(D1041)); endif;
		IF D1051 IN 5 THEN write("%s;007- Falta %s",strip(CI_CLAVE),getlabel(D1051)); endif;
		IF D1061 IN 6 THEN write("%s;008- Falta %s",strip(CI_CLAVE),getlabel(D1061)); endif;
		IF D1071 IN 7 THEN write("%s;009- Falta %s",strip(CI_CLAVE),getlabel(D1071)); endif;
		IF D1081 IN 8 THEN write("%s;010- Falta %s",strip(CI_CLAVE),getlabel(D1081)); endif;
		write("");
ENDIF;			  
PROC XVAL07
    {
    string case_idbase;
	
	//case_idbase=getcaselabel(_IDS0); 
	string ruta_unidos,aux_varq;
	ruta_unidos=pathconcat(Application,"Unidos","Base_unida_out.csdb");
	//errmsg("key:%s",key(IMESPPBI_DICT));

	aux_varq =concat('"',"SELECT case-id from Level-1 where ci_clave='",strip(ci_clave),"';",'"');
	
	}
    //verifica si tiene datos la tabla
	string ruta_unidos,aux_varq2,aux_varq,aux_var_full;
	ruta_unidos=pathconcat(Application,"Base_unida_out.csdb");

	//------------------------------------------------------------------
	list string Case_full;	
	//captura la case_id is existe la base tiene datos
	aux_varq2 =concat("select * from `level-1` where ci_clave='",ci_clave,"';");

	i= sqlquery(ruta_unidos, Case_full, aux_varq2);
    
	if i in default then
		errmsg("El archivo no tiene datos-VERIFICAR!!!!!!: %d",Case_full.length());
	endif;	
	//------------------------------------------------------------------

	list string wCaseKeys;
	string aux_id;
	
	sqlquery(ruta_unidos, wCaseKeys, aux_varq);

	//ojo usar alt+96 = `
	aux_varq =concat("select `case-id` from `level-1` where ci_clave='",ci_clave,"';");
	//errmsg("key:%s",key(IMESPPBI_DICT));

	sqlquery(ruta_unidos, wCaseKeys, aux_varq);

	do numeric ctr = 1 while ctr <= wCaseKeys.length()
		   {errmsg("Clave     : %s", campos_notes(ctr,1));
		   errmsg("Variable  : %s", campos_notes(ctr,2));
		   errmsg("Ocurrencia: %s", campos_notes(ctr,3));
		   errmsg("Contenido : %s", campos_notes(ctr,4));}

		errmsg("%s",wCaseKeys(ctr));
		aux_id=wCaseKeys(ctr);
	enddo;	
	//------------------------------------------------------------------
	
	//sqlquery(ruta_unidos, campos_notes, 
	//"SELECT  cases.key, notes.field_name,notes.record_occurrence,notes.content  from notes join cases on notes.case_id = cases.id;");
	
	array string campos_notes(1000, 4);
	list string verifiedCaseKeys;
	
	verifiedCaseKeys.clear();
	
	//obtenemos el total de registros de notas
	//sqlquery(IMESPPBI_DICT, verifiedCaseKeys, 
	//"SELECT  cases.key, notes.field_name,notes.record_occurrence,notes.content  from notes join cases on notes.case_id = cases.id;");
    
	sqlquery(IMESPPBI_DICT, verifiedCaseKeys,concat( 
	"SELECT  case_id, field_name,record_occurrence,content  from notes WHERE case_id = '",aux_id,"';") );
	
    //obtenemos los campos dentro de una consulta
	//sqlquery(file_name02, campos_notes, 
	//#sqlquery(IMESPPBI_DICT, campos_notes, 
	//#"SELECT  cases.key, notes.field_name,notes.record_occurrence,notes.content  from notes join cases on notes.case_id = cases.id;");
    
	sqlquery(IMESPPBI_DICT, campos_notes, concat(
	"SELECT  case_id, field_name,record_occurrence,content  from notes WHERE case_id = '",aux_id,"';") );

    //colocamos referencia acerca de las variables en los módulos
	errmsg("%s",concat("CI: ",strip(CI_CLAVE )));
	errmsg("%s","");
	errmsg("%s","Referencia para Listado de Personas");
	errmsg("%s","L02 : línea de la persona");
	errmsg("%s","LP103	: Edad en el listado");
	errmsg("%s","LP101	: Nombre en el listado");
	errmsg("%s","");
	errmsg("%s","Referencia para Postulante (***)");
	errmsg("%s","PL02 : línea de la persona");
	errmsg("%s","LP103  : Edad utilizado en ***");
	errmsg("%s","LP101 : Nombre en *** ");
	errmsg("%s","");
	errmsg("%s","Referencia para Población, Educación, Empleo (***)");
	errmsg("%s","L02 : línea de la persona");
	errmsg("%s","LP103  : Edad utilizado en ***");
	errmsg("%s","LP101 : Nombre en *** ");
	errmsg("%s","");
	errmsg("%s","PL1X  : Postulante - Preguntas 1 a 16 ");
	errmsg("%s","LP1X  : Población - Preguntas 1 a 14 ");
	errmsg("%s","GM15X  : Empleo    - Preguntas 15 a 26");
	errmsg("%s","V1X  : Vivienda - Preguntas 1 a 18");
	errmsg("%s","D1X : Documentación - Preguntas 1 a 8");
    errmsg("");
	
	//errmsg("verifiedCaseKeys: %d",verifiedCaseKeys.length());
    
	do numeric ctr = 1 while ctr <= verifiedCaseKeys.length()
		   {errmsg("Clave     : %s", campos_notes(ctr,1));
		   errmsg("Variable  : %s", campos_notes(ctr,2));
		   errmsg("Ocurrencia: %s", campos_notes(ctr,3));
		   errmsg("Contenido : %s", campos_notes(ctr,4));}
		   
		errmsg("%s",concat(
										maketext("%v(%v) = ",campos_notes(ctr,2),campos_notes(ctr,3)),
										maketext("%v",campos_notes(ctr,4))));	
        										
	enddo;
    
	
	//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

